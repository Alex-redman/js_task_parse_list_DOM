{"mappings":"ACEA,IAOQ,EAMA,EAbF,EAAO,SAAS,gBAAgB,CAAC,MAEvC,SAAS,EAAY,CAAa,EAChC,OAAO,OAAO,EAAc,OAAO,CAAC,QAAS,IAC/C,CAGQ,EAAa,MAAM,IAAI,CAoBtB,GApB8B,IAAI,CACvC,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,EAAY,EAAE,YAAY,CAAC,gBAC3B,EAAY,EAAE,YAAY,CAAC,e,GAGzB,EAAa,AAcZ,CAdiB,CAAC,EAAE,CAAC,UAAU,CAEtC,EAAW,OAAO,CAAC,SAAC,CAApB,EAA6B,OAAA,EAAW,WAAW,CAAC,E,GAI7C,MAAM,IAAI,CAUN,GAVgB,GAAG,CAAC,SAAC,CAAhC,EAA0C,MAAA,CACxC,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,YAAY,CAAC,iBAC5B,OAAQ,EAAY,EAAK,YAAY,CAAC,gBACtC,IAAK,OAAO,EAAK,YAAY,CAAC,YAChC,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar list = document.querySelectorAll(\"li\");\nfunction parseSalary(sallaryString) {\n    return Number(sallaryString.replace(/[$,]/g, \"\"));\n}\nfunction sortList(items) {\n    var sortedItem = Array.from(items).sort(function(a, b) {\n        return parseSalary(b.getAttribute(\"data-salary\")) - parseSalary(a.getAttribute(\"data-salary\"));\n    });\n    var parentNode = items[0].parentNode;\n    sortedItem.forEach(function(item) {\n        return parentNode.appendChild(item);\n    });\n}\nfunction getEmployees(element) {\n    return Array.from(element).map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.getAttribute(\"data-position\"),\n            salary: parseSalary(item.getAttribute(\"data-salary\")),\n            age: Number(item.getAttribute(\"data-age\"))\n        };\n    });\n}\nsortList(list);\ngetEmployees(list);\n\n//# sourceMappingURL=index.74f1f719.js.map\n","'use strict';\n\nconst list = document.querySelectorAll('li');\n\nfunction parseSalary(sallaryString) {\n  return Number(sallaryString.replace(/[$,]/g, ''));\n}\n\nfunction sortList(items) {\n  const sortedItem = Array.from(items).sort(\n    (a, b) =>\n      parseSalary(b.getAttribute('data-salary')) -\n      parseSalary(a.getAttribute('data-salary')),\n  );\n\n  const parentNode = items[0].parentNode;\n\n  sortedItem.forEach((item) => parentNode.appendChild(item));\n}\n\nfunction getEmployees(element) {\n  return Array.from(element).map((item) => ({\n    name: item.textContent.trim(),\n    position: item.getAttribute('data-position'),\n    salary: parseSalary(item.getAttribute('data-salary')),\n    age: Number(item.getAttribute('data-age')),\n  }));\n}\n\nsortList(list);\n\ngetEmployees(list);\n"],"names":["sortedItem","parentNode","list","document","querySelectorAll","parseSalary","sallaryString","Number","replace","Array","from","sort","a","b","getAttribute","items","forEach","item","appendChild","map","name","textContent","trim","position","salary","age"],"version":3,"file":"index.74f1f719.js.map"}